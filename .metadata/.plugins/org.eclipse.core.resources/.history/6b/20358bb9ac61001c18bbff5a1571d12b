package com.base;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

public class BaseClass{
	public static WebDriver driver;
	public static WebDriver getBrowser(String type) {
		if(type.equalsIgnoreCase("chrome")) {
		System.setProperty("webdriver.chrome.driver",
				System.getProperty("user.dir")+"\\chromedriver_win32\\chromedriver_win32\\chromedriver.exe");
	 	 driver = new ChromeDriver();
		}
		else if(type.equalsIgnoreCase("firefox")) {
			System.setProperty("webdriver.gecko.driver",
					System.getProperty("user.dir")+"\\chromedriver_win32\\chromedriver_win32\\chromedriver.exe");
		 	 driver = new FirefoxDriver();
		}
		driver.manage().window().maximize();
		return driver;
	}
	public static void getUrl(String url) {
		driver.get(url);
	}
	public static void click(WebElement element) {
		element.click();
	}
	public static void sendKeys(WebElement element,String value) {
		element.sendKeys(value);
	}
	public static void moveToElement(WebDriver driver,WebElement element) {
		Actions w = new Actions(driver);
		w.moveToElement(element).build().perform();
	}
	public static void implicitlyWait(int seconds ,TimeUnit format) {
		driver.manage().timeouts().implicitlyWait(seconds, format);
	}
	public static void jsExecutor() {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("window.scrollBy(0,400)", "");
	}
	public static void selectByValue(WebElement element,String value) {
		Select s=new Select(element);
		s.selectByValue(value);
	}
	public static void takesScreenshot() throws IOException {
		TakesScreenshot ts = (TakesScreenshot) driver;
		File source = ts.getScreenshotAs(OutputType.FILE);
		File destination = new File(
				"C:\\Users\\my pc\\eclipse-workspace\\Selenium_Project\\Screenshot\\pppp.png");
		FileUtils.copyFile(source, destination);
	}
	public static void particularData() throws Exception {
		File f=new File("vfc");
		FileInputStream fis=new FileInputStream(f);
		
	}
}